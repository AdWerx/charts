nameOverride: ""
fullnameOverride: ""

namespace: default

image:
  repository: myapp
  tag: 1.2.3
  pullPolicy: IfNotPresent

# annotations:
#   checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}

redis:
  enabled: false

database:
  enabled: false
  # type: postgresql or mysql


postgresql:
  enabled: false
  postgresqlUsername: app
  # password is autogenerated. uncomment if you wish to provide a password
  # postgresqlPassword:

mysql:
  enabled: false
  postgresqlUsername: app
  # password is autogenerated. uncomment if you wish to provide a password
  # postgresqlPassword:

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.test
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.test

environment:
  RAILS_ENV: staging
  # uncomment if you have a DB host ENV variable and postgresql is disabled
  # RAILS_DB_HOST:

secrets: {}
  # add these credentials via the CLI (--set='RAILS_DB_USERNAME=myuser') if postgresql is disabled
  # be sure to base64 encode the values!
  # RAILS_DB_USERNAME:
  # RAILS_DB_PASSWORD:


processes:
  web:
    enabled: true
    replicas: 1
    # update this is your command to start a rails server is different
    # this value must be an array
    command:
      - bin/rails
      - server
      - -b 0.0.0.0
    service:
      type: ClusterIP
      port: 80
      targetPort: http
    ports:
      - name: http
        # update this to the port your rails server listens on
        containerPort: 3000
    readinessProbe:
      httpGet:
        # update this path to an endpoint in your application
        # that serves as a health or readiness check
        path: /health
        port: http
    livenessProbe:
      httpGet:
        # update this path to an endpoint in your application
        # that serves as a health or liveness check
        path: /health
        port: http
    autoscaling:
      # change this to true to enable autoscaling
      enabled: false
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 50
      targetMemoryUtilizationPercentage: 50
    resources: {}
    # It is recommended to *always* run pods with resource requests.
    # If you do want to resources, uncomment the following lines,
    # adjust them as necessary, and remove the curly braces after 'resources:'.
    #   limits:
    #     cpu: "1"
    #     memory: 1.2Gi
    #   requests:
    #     cpu: "200m"
    #     memory: 400Mi
    nodeSelector: {}
    tolerations: []
    affinity: {}

  # add as many more processes as you need to this map. The key will be the
  # value of the 'app.kubernetes.io/component' label on the deployment and pods

  # worker:
  #   enabled: true
  #   replicas: 1
  #   command:
  #     - bundle
  #     - exec
  #     - sidekiq
