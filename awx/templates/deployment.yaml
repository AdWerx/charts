apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "awx.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "awx.name" . }}
    helm.sh/chart: {{ include "awx.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "awx.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "awx.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/settings-configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "awx.serviceAccountName" $ }}
      containers:

        - name: task
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /usr/bin/launch_awx_task.sh
          env:
            {{- include "awx.env" . | nindent 12 }}
          volumeMounts:
{{ include "awx.volumeMounts" . | indent 12 }}
{{- if .Values.task.extraVolumeMounts }}
{{ toYaml .Values.task.extraVolumeMounts | indent 12 }}
{{- end }}
          resources:
            {{- toYaml .Values.task.resources | nindent 12 }}

        - name: web
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "awx.env" . | nindent 12 }}
          ports:
            - containerPort: 8052
              name: http
          # livenessProbe:
          #   initialDelaySeconds: 5
          #   httpGet:
          #     path: /
          #     port: http
          readinessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
{{ include "awx.volumeMounts" . | indent 12 }}
{{- if .Values.web.extraVolumeMounts }}
{{ toYaml .Values.web.extraVolumeMounts | indent 12 }}
{{- end }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}

        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          args: ["redis-server", "/etc/redis.conf"]
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          ports:
            - containerPort: 6379
              name: redis-server
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis.conf
              subPath: redis.conf
              readOnly: true
            - name: redis-socket
              mountPath: /var/run/redis
            - name: redis-data
              mountPath: /data
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}

    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
      volumes:
        - name: settings
          configMap:
            name: {{ include "awx.fullname" . }}-settings
            items:
              - key: settings.py
                path: settings.py
        - name: nginx-conf
          configMap:
            name: {{ include "awx.fullname" . }}-settings
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: confd
          secret:
            secretName: {{ include "awx.fullname" . }}-confd
        - name: redis-config
          configMap:
            name: {{ include "awx.fullname" . }}-settings
            items:
              - key: redis.conf
                path: redis.conf
        - name: redis-socket
          emptyDir: {}
        - name: redis-data
          emptyDir: {}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
{{- if .Values.web.extraVolumes }}
{{ toYaml .Values.web.extraVolumes | indent 8 }}
{{- end }}
